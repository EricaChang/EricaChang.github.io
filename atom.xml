<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[小小工程師]]></title>
  <link href="http://ericachang.github.io//atom.xml" rel="self"/>
  <link href="http://ericachang.github.io/"/>
  <updated>2013-12-03T12:31:07.144Z</updated>
  <id>http://ericachang.github.io//</id>
  <author>
    <name><![CDATA[Erica Chang]]></name>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[CSS#1]]></title>
    <link href="http://ericachang.github.io//2013/12/03/css1/"/>
    <id>http://ericachang.github.io//2013/12/03/css1/</id>
    <published>2013-12-03T12:17:28.000Z</published>
    <updated>2013-12-03T12:29:51.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://tympanus.net/codrops/2013/12/02/techniques-for-creating-textured-text">TECHNIQUES FOR CREATING TEXTURED TEXT</a></p>
<p><a href="http://css-tricks.com/viewport-sized-typography/">Viewport Sized Typography</a></p>
<p>not work in FF:
<a href="http://css-demo.herokuapp.com/backgroundClip.html">CSS Exercise#1</a></p>
]]></content>
    <category scheme="http://ericachang.github.io//tags/css/" term="css"/>
    <category scheme="http://ericachang.github.io//categories/前端研究/" term="前端研究"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[SKY Step by Step]]></title>
    <link href="http://ericachang.github.io//2013/07/02/sky-step-by-step/"/>
    <id>http://ericachang.github.io//2013/07/02/sky-step-by-step/</id>
    <published>2013-07-02T08:06:33.000Z</published>
    <updated>2013-07-11T05:56:20.000Z</updated>
    <content type="html"><![CDATA[<p>這是受保護的文章，請輸入密碼：</p>
<p><input type="password" id="pwd"> <input type="button" id="subtn" value="submit"></p>
<p><div id="skycontent">
</div></p>
<script src="/javascript/sky_step_by_step.js"></script>]]></content>
    <category scheme="http://ericachang.github.io//tags/platform/" term="platform"/>
    <category scheme="http://ericachang.github.io//categories/未分類/" term="未分類"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[利用JSONP/ CORS實現Cross-Origin Request]]></title>
    <link href="http://ericachang.github.io//2013/07/01/jsonp_and_cors/"/>
    <id>http://ericachang.github.io//2013/07/01/jsonp_and_cors/</id>
    <published>2013-07-01T09:02:00.000Z</published>
    <updated>2013-07-11T05:14:18.000Z</updated>
    <content type="html"><![CDATA[<p>目前跨域請求常見的做法有兩種，在這裡分別用JSONP和CORS來做實現。<br>- JSONP：利用&lt;script&gt; src可以cross domain獲取資源的特性來做實現，通常會帶一個callback的參數過去供server端呼叫。
這是jQuery的做法，利用$.ajax去動態生成一個&lt;script&gt; tag作實現。</p>
<figure class="highlight lang-js"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="function"><span class="keyword">function</span> <span class="title">jsonpCallback</span><span class="params">(data)</span> {</span> <span class="comment">// 需要public出來，不然會呼叫不到！</span>
    console.log(data);
}
<span class="function"><span class="keyword">function</span> <span class="title">remote</span><span class="params">()</span> {</span>
    $.ajax({
        url: <span class="string">"http://demosite2013.herokuapp.com/exercise/crossDomain/jsonp.php"</span>,
        dataType: <span class="string">"jsonp"</span>,
        jsonpCallback: <span class="string">"jsonpCallback"</span>,
        success: <span class="keyword">function</span>(data) {
            console.log(<span class="string">"success: "</span> + data);
        }
    });
}

jQuery(document).ready(<span class="keyword">function</span>(){
    remote();
});
</pre></td></tr></table></figure>

<p>也可以利用&lt;script&gt; tag直接呼叫：</p>
<figure class="highlight lang-js"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"http://demosite2013.herokuapp.com/exercise/crossDomain/jsonp.php?callback=jsonpCallback"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span>
</pre></td></tr></table></figure>

<p><a href="http://demosite2013.herokuapp.com/exercise/crossDomain/jsonp.php">Server端</a>的寫法：</p>
<figure class="highlight lang-php"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="preprocessor">&lt;?php</span> header(<span class="string">'content-type: application/json; charset=utf-8'</span>);
    <span class="variable">$data</span> = <span class="string">"這是Server回傳資料！"</span>;
    <span class="keyword">echo</span> <span class="variable">$_GET</span>[<span class="string">'callback'</span>].<span class="string">'('</span>.json_encode(<span class="variable">$data</span>).<span class="string">')'</span>;
<span class="preprocessor">?&gt;</span>
</pre></td></tr></table></figure>

<p><a name="more"></a>
- <a href="https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS?redirectlocale=en-US&amp;redirectslug=HTTP_access_control">CORS</a>:最近常見也是W3C推薦的做法。
Client端只要依照一般的ajax request要求即可，這裡用jQuery來實現。</p>
<figure class="highlight lang-js"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre> (<span class="function"><span class="keyword">function</span> <span class="params">(window, document, undefined)</span> {</span>
    <span class="function"><span class="keyword">function</span> <span class="title">remote</span><span class="params">()</span> {</span>
        $.ajax({
            url: <span class="string">"http://demosite2013.herokuapp.com/exercise/crossDomain/cors.php"</span>,
            success: <span class="keyword">function</span>(data) {
                console.log(<span class="string">"success: "</span> + data);
            }
        });
    }

    jQuery(document).ready(<span class="keyword">function</span>(){
        remote();
    });
})(window, document);
</pre></td></tr></table></figure>

<p><a href="http://demosite2013.herokuapp.com/exercise/crossDomain/cors.php">Server端</a>的寫法比較要考慮是否要接受/拒絕cross domain requests：</p>
<figure class="highlight lang-php"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="preprocessor">&lt;?php</span> header(<span class="string">'content-type: application/json; charset=utf-8'</span>);
    <span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">'REQUEST_METHOD'</span>] == <span class="string">"OPTIONS"</span>) {
        <span class="comment">// Tell the Client we support invocations and that this preflight holds good for only 20 days</span>
        header(<span class="string">'Access-Control-Allow-Origin: *'</span>);
        header(<span class="string">'Access-Control-Allow-Methods: POST, GET, OPTIONS'</span>);
        header(<span class="string">'Access-Control-Max-Age: 1728000'</span>);
        header(<span class="string">"Content-Length: 0"</span>);
        header(<span class="string">"Content-Type: application/json"</span>);
    } <span class="keyword">elseif</span>(<span class="variable">$_SERVER</span>[<span class="string">'REQUEST_METHOD'</span>] == <span class="string">"GET"</span> || <span class="string">"POST"</span>) {
        header(<span class="string">'Access-Control-Allow-Origin: *'</span>);
        header(<span class="string">'Content-Type: application/json'</span>);
        <span class="variable">$data</span> = <span class="string">"這是Server回傳資料！"</span>;
        <span class="keyword">echo</span> json_encode(<span class="variable">$data</span>);
    } <span class="keyword">else</span> {
        <span class="keyword">die</span>(<span class="string">"No Other Methods Allowed"</span>);
    }
<span class="preprocessor">?&gt;</span>
</pre></td></tr></table></figure>

<p>如果沒有<a href="http://caniuse.com/#search=cors">瀏覽器相容性</a>的要求，建議是以CORS實現，彈性比較大也可以發post request；如果使用JSONP的話只能處理get request，而且也不算是Ajax的實現。</p>
]]></content>
    <category scheme="http://ericachang.github.io//tags/javascript/" term="javascript"/>
    <category scheme="http://ericachang.github.io//tags/jquery/" term="jquery"/>
    <category scheme="http://ericachang.github.io//categories/前端研究/" term="前端研究"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[jQueryPlugin: query Gist]]></title>
    <link href="http://ericachang.github.io//2013/06/27/query-gist-plugin/"/>
    <id>http://ericachang.github.io//2013/06/27/query-gist-plugin/</id>
    <published>2013-06-27T10:20:34.000Z</published>
    <updated>2013-07-11T05:08:13.000Z</updated>
    <content type="html"><![CDATA[<p>之前看完<a href="https://tutsplus.com/course/30-days-to-learn-jquery/">30 Days to Learn jQuery</a>後一直想寫個比較完整的jQuery Plugin，最近寫了個自娛娛人的練習，主要用來查詢自己的Gist，查詢關鍵字的部分是對Gist檔名模糊查詢，使用範例：<a href="http://demosite2013.herokuapp.com/exercise/gist/gist.html">Query Gist</a>
<a name="more"></a>
因為用了<a href="https://developer.mozilla.org/en-US/docs/Web/API/window.btoa">window.btoa</a>，所以只支援IE10以上的版本。如果真的很介意，坊間有很多替代的加密方式，像是<a href="http://rumkin.com/tools/cipher/base64.php">Base64</a>。</p>
<figure class="highlight lang-js"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
</pre></td><td class="code"><pre>(<span class="function"><span class="keyword">function</span> <span class="params">($, window, document, undefined)</span> {</span>
    <span class="keyword">var</span> Gist = {
        init: <span class="function"><span class="keyword">function</span> <span class="params">(options, target)</span> {</span>
            <span class="keyword">var</span> self = <span class="keyword">this</span>;
            $.extend($.fn.queryGist.options, options);

            self.API_URL = <span class="string">'https://api.github.com/gists'</span>;
            self.$target = $(target);
            self.username = $.fn.queryGist.options.username;
            self.password = $.fn.queryGist.options.password;
            self.search = $.fn.queryGist.options.search.trim().replace(<span class="regexp">/\s+/</span>, <span class="string">' '</span>);
            self.fetch().done(<span class="function"><span class="keyword">function</span> <span class="params">(results)</span> {</span>
                self.list(results);
                self.display();
            }).fail(<span class="keyword">function</span>(jqXHR, textStatus, errorThrown) {
                alert(<span class="string">'Request failed: '</span> + errorThrown + <span class="string">'\r\n請檢查帳號密碼是否正確！'</span>);
            });
        },
        fetch: <span class="function"><span class="keyword">function</span> <span class="params">()</span> {</span>
            <span class="keyword">return</span> $.ajax({
                url: <span class="keyword">this</span>.API_URL,
                headers: { Authorization: <span class="string">'Basic '</span> + btoa(<span class="keyword">this</span>.username + <span class="string">':'</span> + <span class="keyword">this</span>.password) }
            });
        },
        list: <span class="function"><span class="keyword">function</span> <span class="params">(results)</span> {</span>
            <span class="keyword">var</span> file, regs, i;
            results = results.map(<span class="function"><span class="keyword">function</span> <span class="params">(gist)</span> {</span>
                file = Object.keys(gist.files)[<span class="number">0</span>];
                <span class="keyword">return</span> gist.files[file];
            });
            <span class="keyword">if</span> (!!<span class="keyword">this</span>.search) {
                regs = <span class="keyword">this</span>.search.split(<span class="string">' '</span>);
                results = results.filter(<span class="function"><span class="keyword">function</span> <span class="params">(file)</span> {</span>
                    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; regs.length; i++) {
                        <span class="keyword">if</span> (<span class="keyword">new</span> RegExp(regs[i], <span class="string">'i'</span>).test(file.filename)) {
                            <span class="keyword">return</span> <span class="literal">true</span>;
                        }
                    }
                    <span class="keyword">return</span> <span class="literal">false</span>;
                });
            }
            <span class="keyword">this</span>.gists = results;
        },
        display: <span class="function"><span class="keyword">function</span> <span class="params">()</span> {</span>
            <span class="keyword">var</span> self = <span class="keyword">this</span>;
            self.$target.html(<span class="string">''</span>);
            $(self.gists).each(<span class="function"><span class="keyword">function</span> <span class="params">(idx, gist)</span> {</span>
                $(<span class="string">'&lt;a/&gt;'</span>, {
                    href: gist.raw_url,
                    target: <span class="string">'_blank'</span>,
                    text: gist.filename
                }).appendTo(self.$target);
                self.$target.append(<span class="string">'&lt;br&gt;'</span>);
            });
        }
    };

    $.fn.queryGist = <span class="keyword">function</span>(options) {
        <span class="keyword">return</span> <span class="keyword">this</span>.each(<span class="keyword">function</span>() {
            <span class="keyword">var</span> gist = Object.create(Gist);
            gist.init(options, <span class="keyword">this</span>);
        });
    };

    $.fn.queryGist.options = {
        username: <span class="literal">null</span>,
        password: <span class="literal">null</span>,
        search: <span class="literal">null</span>
    };

})(jQuery, window, document);
</pre></td></tr></table></figure>
]]></content>
    <category scheme="http://ericachang.github.io//tags/javascript/" term="javascript"/>
    <category scheme="http://ericachang.github.io//tags/jquery/" term="jquery"/>
    <category scheme="http://ericachang.github.io//categories/前端研究/" term="前端研究"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[定時更新圖片]]></title>
    <link href="http://ericachang.github.io//2013/06/24/refresh-images/"/>
    <id>http://ericachang.github.io//2013/06/24/refresh-images/</id>
    <published>2013-06-24T05:19:42.000Z</published>
    <updated>2013-07-11T05:08:19.000Z</updated>
    <content type="html"><![CDATA[<p>這是一即時影像更新的實作，利用<a href="http://longdon.hopto.org/">龍洞即時影像圖片來源</a>，每三秒更新一次圖片。</p>
<figure class="highlight lang-js"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="function"><span class="keyword">function</span> <span class="title">Camera</span><span class="params">(img)</span> {</span>
    <span class="keyword">this</span>.img = img; <span class="comment">// 圖片來源</span>
}
Camera.prototype = {
    refresh: <span class="keyword">function</span>() {
        <span class="keyword">var</span> uniq = Math.random();
        $(<span class="string">'#cam'</span>).attr(<span class="string">'src'</span>, <span class="keyword">this</span>.img + <span class="string">'?uniq='</span> + uniq);
    },
    loadImg: <span class="function"><span class="keyword">function</span> <span class="params">()</span> {</span>
        <span class="keyword">var</span> self = <span class="keyword">this</span>;
        $(<span class="string">'#cam'</span>).load(<span class="keyword">function</span>() { <span class="comment">// 註冊onload事件，當圖片載完3秒後觸發refresh事件</span>
            setTimeout(<span class="keyword">function</span>() { self.refresh.call(self); }, <span class="number">3000</span>);
        });
    }
};
</pre></td></tr></table></figure>

<p>請參考：<a href="http://demosite2013.herokuapp.com/exercise/weather/camera.html">實作範例</a></p>
]]></content>
    <category scheme="http://ericachang.github.io//tags/javascript/" term="javascript"/>
    <category scheme="http://ericachang.github.io//categories/前端研究/" term="前端研究"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[在Heroku架設靜態網站]]></title>
    <link href="http://ericachang.github.io//2013/06/20/deploy-static-page-on-heroku/"/>
    <id>http://ericachang.github.io//2013/06/20/deploy-static-page-on-heroku/</id>
    <published>2013-06-20T05:55:19.000Z</published>
    <updated>2013-07-11T05:06:45.000Z</updated>
    <content type="html"><![CDATA[<p>想在Heroku架設一個靜態網站？
為了這件事特地寫個應用實在麻煩，最簡單的做法是將index.html更名為_index.html(或其他類似的名字)，並新增一個index.php內容如下：</p>
<figure class="highlight lang-php"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="preprocessor">&lt;?php</span>
    <span class="keyword">include_once</span>(<span class="string">"_index.html"</span>);
<span class="preprocessor">?&gt;</span>
</pre></td></tr></table></figure>

<p>部署步驟如下：
1.為網站建立一個專案：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="title">mkdir</span> heroku
<span class="title">cd</span> heroku
</pre></td></tr></table></figure>

<p>2.建立index.php，並指向靜態網站首頁。
3.推送到Heroku上：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="title">git</span> init
<span class="title">git</span> add .
<span class="title">heroku</span> create &lt;appName&gt;
<span class="title">git</span> commit -m <span class="string">"initial commit"</span>
<span class="title">git</span> push heroku master
</pre></td></tr></table></figure>

<p>4.打開網站確認：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="title">heroku</span> open
</pre></td></tr></table></figure>

<p>部署完成囉！
--
題外話，有試著偷渡把index.html改成index.jsp，想當然是失敗了......push時報錯：! Push rejected, no Cedar-supported app detected</p>
]]></content>
    <category scheme="http://ericachang.github.io//tags/heroku/" term="heroku"/>
    <category scheme="http://ericachang.github.io//categories/前端研究/" term="前端研究"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Mac實用工具]]></title>
    <link href="http://ericachang.github.io//2013/06/06/mac-setup/"/>
    <id>http://ericachang.github.io//2013/06/06/mac-setup/</id>
    <published>2013-06-06T04:10:05.000Z</published>
    <updated>2013-07-11T05:08:06.000Z</updated>
    <content type="html"><![CDATA[<p>最近從Ubuntu換到Mac，記錄一下一些實用的工具：</p>
<hr>
<ul>
<li><a href="http://www.sublimetext.com/2">Sublime Text 2</a>: 好用的文字編輯器，拿來寫前端網頁很方便，輕量又高效。</li>
<li><a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a>: 虛擬電腦。</li>
<li><a href="http://www.libreoffice.org/download">LibreOffice</a>: 文書軟體。</li>
<li><a href="http://www.zsh.org/">zsh</a>: 好用的shell。<a name="more"></a>
</li>
</ul>
<hr>
<p>Ubuntu:</p>
<ul>
<li><a href="http://clipit.rspwn.com/ubuntu-ppa/">Clipit</a>: 好用的剪貼簿軟體，沒有中文相容的問題，有static項目可以儲存常用資料。</li>
<li><a href="http://goldendict.org/download.php">GoldenDict</a>: 字典，可以匯入詞典和線上查詢，有劃詞翻譯的功能。</li>
<li><a href="http://deadbeef.sourceforge.net/download.html">DeaDBeef</a>: 音樂播放軟體。</li>
<li><a href="http://www.pidgin.im/download/">Pidgin</a>: 聊天軟體。</li>
<li><a href="https://code.google.com/p/autokey/downloads/list">autokey</a>: text expansion。</li>
<li><a href="http://sourceforge.net/projects/retext/files/">ReText</a>: MarkDown編輯器。</li>
<li><a href="https://github.com/nvbn/everpad">Everpad</a>: Evernote。</li>
<li><a href="http://cdimage.ubuntu.com/ubuntu-gnome/releases/13.04/release/">Ubuntu-GNOME</a>: 慣用的桌面。</li>
</ul>
<hr>
<p>Mac:</p>
<ul>
<li><a href="https://github.com/fikovnik/ShiftIt">ShiftIt</a>: 視窗管理軟體，可以用熱鍵將視窗最大化，垂直／水平排列。</li>
<li><a href="http://www.clipmenu.com/">ClipMenu</a>: 剪貼簿軟體，可以設定snippets。</li>
<li><a href="https://code.google.com/p/mac-dictionary-kit/downloads/list">DictUnifier</a>: 字典轉換軟體，可以擴充<a href="http://abloz.com/huzheng/stardict-dic/zh_TW/">字典庫</a>。</li>
<li><a href="http://www.grandtotal.biz/CheatSheet/">CheatSheet</a>: 長按command鍵可以出現應用程式熱鍵提示。</li>
<li><a href="http://www.paragon-software.com/tw/home/ntfs-mac/">Paragon NTFS</a>: 如果隨身碟是NTFS格式需要安裝這應用才能寫入，收費軟體。</li>
<li><a href="http://www.techsmith.com/jing.html">Jing</a>: 螢幕截圖軟體。</li>
<li><a href="http://www.freemacsoft.net/appcleaner/">AppCleaner</a>: 移除程式軟體，可以偵測關聯的檔案一併刪除。</li>
<li><a href="http://sourceforge.net/projects/keka/files/">KeKa</a>: 壓縮／解壓縮軟體。</li>
<li><a href="http://www.stuffit.com/win-expander.html">StuffIt Expander</a>: 解壓縮軟體。</li>
<li><a href="http://www.alfredapp.com/">Alfred</a>: 快速搜尋並執行應用程式。</li>
<li><a href="http://mxcl.github.io/homebrew/">Homebrew</a>: 套件管理程式。</li>
<li><a href="http://mouapp.com/">Mou</a>: MarkDown編輯器。</li>
<li><a href="http://www.iterm2.com/">iTerm 2</a>: 好用的Terminal。</li>
</ul>
<p>另外finder沒有可以選擇顯示隱藏檔的設定，可以在appleScript寫入以下內容，儲存為應用程式，拉到finder功能列作使用（<a href="http://n8henrie.com/2012/08/show-or-hide-hidden-files-on-your-mac-with-applescript/">參考來源</a>）：</p>
<figure class="highlight lang-applescript"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="keyword">set</span> question <span class="keyword">to</span> <span class="command">display dialog</span> <span class="string">"Show or hide hidden files?"</span> &amp; <span class="constant">return</span> &amp; <span class="string">"Don't that forget this will relaunch Finder."</span> buttons {<span class="string">"Show hidden files"</span>, <span class="string">"Hide hidden files"</span>, <span class="string">"Cancel"</span>}
<span class="keyword">set</span> theAnswer <span class="keyword">to</span> button returned <span class="keyword">of</span> <span class="constant">result</span>

<span class="keyword">if</span> theAnswer <span class="keyword">is</span> <span class="string">"Show hidden files"</span> <span class="keyword">then</span>
<span class="command">do shell script</span> <span class="string">"defaults write com.apple.finder AppleShowAllFiles TRUE &amp;&amp; killall Finder"</span>
<span class="keyword">end</span> <span class="keyword">if</span>
<span class="keyword">if</span> theAnswer <span class="keyword">is</span> <span class="string">"Hide hidden files"</span> <span class="keyword">then</span>
<span class="command">do shell script</span> <span class="string">"defaults write com.apple.finder AppleShowAllFiles FALSE &amp;&amp; killall Finder"</span>
<span class="keyword">end</span> <span class="keyword">if</span>

<span class="keyword">if</span> theAnswer <span class="keyword">is</span> <span class="string">"Cancel"</span> <span class="keyword">then</span>
<span class="command">return</span>

<span class="keyword">end</span> <span class="keyword">if</span>
</pre></td></tr></table></figure>
]]></content>
    <category scheme="http://ericachang.github.io//tags/os/" term="os"/>
    <category scheme="http://ericachang.github.io//categories/未分類/" term="未分類"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[jQuery: Head First Into Plugin Development]]></title>
    <link href="http://ericachang.github.io//2013/05/29/jquery-plugin-dev/"/>
    <id>http://ericachang.github.io//2013/05/29/jquery-plugin-dev/</id>
    <published>2013-05-29T07:18:26.000Z</published>
    <updated>2013-07-11T05:07:49.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://tutsplus.com/course/30-days-to-learn-jquery/">30 Days to Learn jQuery</a>真的是很不錯的基礎課程。
最近常被問到有沒有寫過jQuery的plugin，有興趣的人特別要看看<a href="https://tutsplus.com/lesson/head-first-into-plugin-development/">Head First Into Plugin Development</a>這集，在這裡簡單地整理出影片中的一些要點：
1. 利用self invoking function包覆plugin的code去確保$符號表示jQuery：</p>
<figure class="highlight lang-js"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>(<span class="function"><span class="keyword">function</span> <span class="params">($, window, document, undefined)</span> {</span>
    <span class="comment">// code here...</span>
})(jQuery, window, document);
</pre></td></tr></table></figure>

<p><a name="more"></a>
2. 利用$.fn.<em>_pluginName</em>去新增jQuery的plugin方法供使用者呼叫。
3. 讓options可以更有彈性地被使用者呼叫，範例這裡是把options作為plugin的property去實現：<code>$.fn._pluginName.options</code>
4. plugin最後要記得返回jQuery的object作為之後chaining使用。
5. catch this，避免在之後使用時this被指為呼叫方法的物件誤用（範例是把this指給名為self的變數）
6. 利用Object.create去生成物件的instance（function的話直接使用new就可以了，範例把plugin主要的code包在Object裡），注意並不是所有瀏覽器都支援Object.create的寫法，可以加上這段code確保執行沒有問題：</p>
<p><figure class="highlight lang-js"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="keyword">if</span> ( <span class="keyword">typeof</span> Object.create !== <span class="string">'function'</span> ) {
    Object.create = <span class="keyword">function</span>( obj ) {
        <span class="function"><span class="keyword">function</span> <span class="title">F</span><span class="params">()</span> {</span>};
        F.prototype = obj;
        <span class="keyword">return</span> <span class="keyword">new</span> F();
    };
}
</pre></td></tr></table></figure>
7. 利用<code>$.extend</code>去覆寫options的預設值（盡量把可設定的變數都寫在<code>$.fn._pluginName.options</code>裡，沒有預設值的就設成null無妨，主要是之後維護時可以一目瞭然有哪些變數可供設定）
8. 一個方法只做一件事可以確保程式容易被測試和維護。</p>
]]></content>
    <category scheme="http://ericachang.github.io//tags/jquery/" term="jquery"/>
    <category scheme="http://ericachang.github.io//tags/javascript/" term="javascript"/>
    <category scheme="http://ericachang.github.io//categories/前端研究/" term="前端研究"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[關於Hexo]]></title>
    <link href="http://ericachang.github.io//2013/05/20/about-hexo/"/>
    <id>http://ericachang.github.io//2013/05/20/about-hexo/</id>
    <published>2013-05-20T06:32:28.000Z</published>
    <updated>2013-07-11T05:06:28.000Z</updated>
    <content type="html"><![CDATA[<p>一開始是用Octopress架網誌，但在找theme時看到Hexo這個好東西就馬上遷過去了。
原因很簡單：</p>
<ol>
<li>node.js產生靜態網頁速度很快</li>
<li>hexo算是基於octopress的架構去發展，可以說是無痛轉移</li>
<li>支援GitHub, Heroku</li>
</ol>
<p>再說比起Ruby，javascript對我來說方便調整多了，一整個神清氣爽。
--
<a href="https://github.com/tommy351/hexo">Hexo專案</a> (是台灣人開發的)
<a href="http://zespia.tw/hexo/zh-TW/">Hexo說明文件</a>
網誌用到的Plugins：<a href="https://github.com/tommy351/hexo-plugins/tree/master/generator/feed">RSS</a>, <a href="https://github.com/tommy351/hexo-plugins/tree/master/generator/sitemap">Sitemap</a>
主題：<a href="https://github.com/thiagopnts/hexo-persona-dark">Persona Dark</a>
--
網站的網頁用<a href="http://embeddedjs.com/">EJS</a>樣板文件產生，CSS以<a href="http://learnboost.github.io/stylus/docs/executable.html">Stylus</a>維護，通常只要更改這些檔案就可以了。
舉例來說如果要將文章中的超連結另開視窗，又不想在md檔加上HTML的tag，可以修改<code>head.ejs</code>加入以下script：</p>
<figure class="highlight lang-js"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre>&lt;script&gt;
(<span class="function"><span class="keyword">function</span> <span class="params">(window, document, undefined)</span> {</span>
    $(document).ready(<span class="keyword">function</span>() {
        $(<span class="string">'article a[href^="http"]'</span>).each(<span class="function"><span class="keyword">function</span> <span class="params">()</span> {</span>
            $(<span class="keyword">this</span>).attr(<span class="string">'target'</span>, <span class="string">'_blank'</span>);
        });
    });
})(<span class="keyword">this</span>, document);
<span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span>
</pre></td></tr></table></figure>
]]></content>
    <category scheme="http://ericachang.github.io//tags/nodejs/" term="nodejs"/>
    <category scheme="http://ericachang.github.io//tags/hexo/" term="hexo"/>
    <category scheme="http://ericachang.github.io//categories/未分類/" term="未分類"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[如何利用Dropbox將專案納入GIT版本控制]]></title>
    <link href="http://ericachang.github.io//2013/05/17/git-with-dropbox/"/>
    <id>http://ericachang.github.io//2013/05/17/git-with-dropbox/</id>
    <published>2013-05-17T03:21:39.000Z</published>
    <updated>2013-07-11T05:07:34.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li>switch to your working directory</li>
<li>git init</li>
<li>git add .</li>
<li>use &#39;git status&#39; to confirm the status</li>
<li>git commit -m &quot;init&quot;</li>
<li>use &#39;git status&#39; to confirm the status</li>
<li>switch to the dropbox folder, ex: cd ~/Dropbox/repos</li>
<li>make a remote repo: mkdir <em>_repositoryName</em>.git</li>
<li>git init --bare <em>_repositoryName</em>.git</li>
<li>switch to your working directory</li>
<li>git remote add origin <em>_repositoryPath</em>, ex: /home/erica/Dropbox/repos/<em>repositoryName</em>.git</li>
<li>git push origin master</li>
</ol>
<p>and if you want to checkout the project: <code>git clone _repositoryPath _projectname</code></p>
]]></content>
    <category scheme="http://ericachang.github.io//tags/git/" term="git"/>
    <category scheme="http://ericachang.github.io//categories/版本控制/" term="版本控制"/>
  </entry>
</feed>
